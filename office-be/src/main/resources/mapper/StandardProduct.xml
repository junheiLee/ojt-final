<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ojt_final.office.dao.StandardProdDao">

    <insert id="saveAll" parameterType="StandardProd">
        INSERT INTO tStandardProduct (
                    nProductCode,
                    nCategoryCode,
                    sProductName,
                    sBundleCondition,
                    sDescription,
                    nMinPrice,
                    nAvgPrice,
                    nPartnerCount
        )
        VALUES
            <foreach collection="list" item="StandardProd" separator="," >
                (
                #{StandardProduct.code},
                #{StandardProduct.categoryCode},
                #{StandardProduct.name},
                #{StandardProduct.bundleCondition},
                #{StandardProduct.description},
                #{StandardProduct.minPrice},
                #{StandardProduct.avgPrice},
                #{StandardProduct.partnerCount}
                )
            </foreach>
        ON DUPLICATE KEY UPDATE
                sProductName = VALUES(sProductName),
                nCategoryCode = VALUES(nCategoryCode),
                sDescription = VALUES(sDescription ),
                dtManufactureDate = VALUES(dtManufactureDate)
    </insert>

    <select id="countAll">
        SELECT COUNT(nProductCode)
        FROM tStandardProduct
    </select>

    <update id="integrateChange">
        UPDATE tStandardProduct SP
        INNER JOIN (
            SELECT
                L.nProductCode,
                MIN(PP.nPcPrice) AS minPcPrice,
                MIN(PP.nMobilePrice) AS minMobilePrice,
                LEAST(MIN(PP.nPcPrice), MIN(PP.nMobilePrice)) AS minPrice,
                AVG(PP.nPcPrice + PP.nMobilePrice)/2 AS avgPrice,
                COUNT(DISTINCT PP.sPartnerCode) AS partnerCount
            FROM tLink L
            INNER JOIN tPartnerProduct PP
                    ON (L.sPartnerProductCode = PP.sPartnerProductCode)
            GROUP BY L.nProductCode
            ) CAL
        ON (SP.nProductCode = CAL.nProductCode)
        SET SP.nMinPcPrice = CAL.minPcPrice,
            SP.nMinMobilePrice = CAL.minMobilePrice,
            SP.nMinPrice = CAL.minPrice,
            SP.nAvgPrice = CAL.avgPrice,
            sp.nPartnerCount = CAL.partnerCount
        <where>
            <if test="list != null and list.size() != 0">
                SP.nProductCode IN (
                <foreach collection="list" item="code" separator=", ">
                    #{code}
                </foreach>
                )
            </if>
        </where>
    </update>
</mapper>
